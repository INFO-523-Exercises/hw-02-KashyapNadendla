---
title: "hw-02-03-Correlating like a Data Master"
format:
  html:
    theme: default
    author: "Kashyap Sai Prasad Nadendla"
---

## SETUP

```{r message=FALSE, warning=FALSE}

if (!require(pacman))
  install.packages("pacman")

pacman::p_load(colorblindr,
       dlookr,
       formattable,
       GGally,
       ggdist,
       ggpubr,
       ggridges,
       here,
       tidyverse)

# Set global ggplot() theme
# Theme pub_clean() from the ggpubr package with base text size = 16
theme_set(theme_pubclean(base_size = 12)) 
# All axes titles to their respective far right sides
theme_update(axis.title = element_text(hjust = 1))
# Remove axes ticks
theme_update(axis.ticks = element_blank()) 
# Remove legend key
theme_update(legend.key = element_blank())
```

## Load and Examine the dataset

I have selected the Premier League match day data. It contains data of every team and their matches in the 2021-2022 season. The data includes teams playing, date, referee, and stats for home and away side such as shots, fouls, cards, halftime and full time result and more.

```{r message=FALSE,warning=FALSE}

tuesdata <- tidytuesdayR::tt_load('2023-04-04')
tuesdata <- tidytuesdayR::tt_load(2023, week = 14)
```

```{r}

soccer <- tuesdata$soccer

soccer |>
  head() |>
  formattable()
```

## Describe and Visualize Correlations

```{r}

correlate(soccer) |>
  formattable()
```

## Correlation Matrix

A correlation Matrix gives us correlations between variables from -1 to 1. A correlation 1 gives a perfect positive correlation whereas a correlation of -1 gives a perfect negative correlation and a correlation of 0 indicates no linear correlation.

From the matrix, we can observe that there is a positive correlation between HS(Home Shots) and FTHG(Full Time Home Goals) and there is a negative correlation between HS(Home Shots) and FTAG( Full Time Away Goals). We can observe an instance of 0 correlation between HF(Home Fouls) and HTAG( Half Time Away Goals).

```{r}

# Correlation matrix of numerical variables
soccer |>
plot_correlate()
```

## Visualize Correlations within Groups

There are three groups, where FTR( Full Time Result) is Away, Draw or Home.

```{r warning=FALSE, message=FALSE}

soccer |>
  group_by(FTR) |>
  plot_correlate()
```

ggpairs function results in a matrix of scatter plots and pairwise correlation coefficients for a set of variables in the dataset. We can visualize relationships between variables in multiple forms. The selected variables are - FTHG(Full Time Home Goals), HS(Home Shots) and HF(Home Fouls) and they are differenciated by color FTR(Full Time Result).

```{r}

#Using Full time result as the categorical variable
#ggpairs from GGally pacakge 
soccer |> 
  dplyr::select(FTHG, HS, HF) |>
  ggpairs(aes(color = soccer$FTR, alpha = 0.5)) +
  theme(strip.background = element_blank()) +
  scale_fill_discrete() +
  scale_color_discrete()
```

## Describe and Visualize Relationships Based on Target Variables

### Numerical Target Variables: Numerical Variable of Interest

In this method we create a new dataframe and drop the NAs in it. Then, we select FTHG(Full Time Home Goals) as the target variable. Next, the relate function is used to a variable of interest which is HST(Home Shots on Target).

The relate function computes the regression coefficients, standard errors, t-statistics and p-values for the two variables.

```{r}

#Dropping NAs because they give an error
soccer.noNA <- soccer |> 
  drop_na()

#Numerical predictor variable we want
num <- target_by(soccer.noNA, FTHG)

#Relating the variable of interest to the numerical target variable. HST - Home team shots on target
num_num <- relate(num, HST)

# Summary of the regression analysis - the same as the summary from lm(Formula)
summary(num_num)
```

A plot with FTHG as x and HST as y and a Predicted vs Observe plot of FTHG.

```{r}

# Plotting the linear relationship
plot(num_num)
```

### Numerical Target Variables: Categorical Variable of Interest

Here, as target_by and relate was not accepting a character variable, I have created a new column with FTR for Home as 1, Away as 2 and Draw as 0.

```{r}

#The categorical predictor variable that we want
soccer$resultCategory <- ifelse(soccer$FTR == "H", 1, ifelse(soccer$FTR == "A", 2, 0))

num <- target_by(soccer, FTHG)

num$resultCategory <- as.factor(num$resultCategory)

#Relating the variable of interest to the numerical target variable
num_cat <- relate(num, resultCategory)

# Summary of the ANOVA analysis - the same as the summary from anova(lm(Formula))
summary(num_cat)
```

We can infer from the boxplot that value 1 which is Home win contains outliers and is positively skewed.

```{r}

plot(num_cat) + 
  theme(axis.text.x = element_blank()) +
  labs(title = "FTHG's box plot by Full Time Result",
       x = "Result")


```

```{r warning=FALSE}

# The categorical predictor variable that we want. FTR - Full time result
categ <- target_by(soccer, FTR)

# Relating the variable of interest to the numerical target variable. FTGH - Full time home goals
cat_num <- relate(categ, FTHG)

# Summary of descriptive statistics
summary(cat_num)
```

A density plot of FTHG(Full Time Home Goals) with color as FTR(Full Time Result)

```{r}

plot(cat_num)
```

Here, we create a new dataset with a column "Winner" and mutate it with a value based on the mean of HST + standard deviation of HST, if this value is lesser than HST then value is Yes otherwise No.

```{r}

# Creating new categorical column
cat_dataset <- soccer |>
  select(FTR, FTHG, HST,AST) |>
  drop_na() |>
  mutate(Winner = ifelse(
    HST > (mean(HST + sd(HST))), 
                          "Yes", 
                          "No"))

# New dataset 
cat_dataset |>
  head() |>
  formattable()
```

Here, we calculate the number of cases, factors and then perform chi square test on it. The resulting value is 26 which means there is some dependence between the two variables.

```{r warning=FALSE}

# The categorical predictor variable that we want
categ <- target_by(cat_dataset, Winner)

# Relating the variable of interest to the categorical target variable
cat_cat <- relate(categ, FTR)

# Summary of the Chi-square test for Independence
summary(cat_cat)
```

A mosaic plot with FTR(Full Time Result) as x and Winner as y.

```{r}

plot(cat_cat)
```
